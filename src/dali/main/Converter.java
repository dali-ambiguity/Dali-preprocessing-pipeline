package dali.main;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import dali.format.CONLL12;
import dali.format.Dali;
import dali.format.IFormat;
import dali.format.MASXML;
import dali.format.MMAX;
import dali.format.SGF;
import dali.util.Options;
import dali.data.DocumentData;
import dali.util.FileHandler;

/**
 * DALI Project: the converter
 * 
 * Juntao Yu, 26/Jul/2017
 *
 */
public class Converter {
	
	private Options op;	
	private IFormat in;
	private List<IFormat> outs;
	
	public Converter(Options op){
		this.op = op;
		init();
	}
	
	
	private void init(){
		outs = new ArrayList<IFormat>();
		String inFormat = op.getInFormat();
		String outFormat = op.getOutFormat();
		
		
		if(inFormat.equals(Options.FORMAT_MASXML))
			in = MASXML.getInstance();
		else if(inFormat.equals(Options.FORMAT_CONLL))
			in = CONLL12.getInstance();
		else if(inFormat.equals(Options.FORMAT_MMAX))
			in = MMAX.getInstance();
		else
			in = Dali.getInstance();
		
		
		if(outFormat.contains(Options.FORMAT_DALI))
			outs.add(Dali.getInstance());
		if(outFormat.contains(Options.FORMAT_MASXML)&&!outFormat.contains(Options.FORMAT_SGF))
			outs.add(MASXML.getInstance());
		if(outFormat.contains(Options.FORMAT_SGF))
			outs.add(SGF.getInstance(op.getXslPath()));
		if(outFormat.contains(Options.FORMAT_CONLL))
			outs.add(CONLL12.getInstance());
		if(outFormat.contains(Options.FORMAT_MMAX))
			outs.add(MMAX.getInstance());
	}
	
	
	public void convert()throws Exception{
		List<File> fileList = FileHandler.getAllFile(new File(op.getInPath()));
		for(File file:fileList){
			if(in.isValidFile(file)){
				System.out.println("Converting file:"+file.getName());
				DocumentData doc = in.read(file);
				for(IFormat io:outs)
					io.write(op.getOutPath(), doc);
			}
		}
		
	}
	
	public static void main(String[] args)throws Exception{
		if(args.length>0&&args[0].matches("-h|--help")) {
			Options op = new Options();
			System.out.println("************Welcome to the DALI Converter*********\n"
					+ "\nThis is a converter designed for DALI project, which is able to convert between five different formats."
					+ "\nCurrently support Dali (a binary file generated by the Dali pipeline), Masxml, CoNLL 2012, MMAX "
					+ "and SGF (output only) format.");
			System.out.println("");
			System.out.println("Useage: java -cp dalipipeline.jar dali.main.Converter [Options]");
			System.out.println("");
			System.out.println("--help|-h				Help");
			System.out.println("-inFormat [dali|masxml|conll|mmax]	The input file format; Default:"+op.getInFormat());
			System.out.println("-input <dir>				The directory that contains the documents to be converted; Default:"+op.getInPath());
			System.out.println("-output <dir>				The directory to output the converted documents; Defalut:"+op.getOutPath());
			System.out.println("-xsl <file> 				The location of the xsl file required by the sgf converter; Defalut:"+op.getXslPath());
			System.out.println("-dali -masxml -sgf -conll -mmax		The output format of the documents; Default:"+op.getOutFormat());
		}else {
		
			Options op = new Options(args);
			
			System.out.println("Dali converter configurations:");
			System.out.println("Input dir:"+op.getInPath());
			System.out.println("Output dir:"+op.getOutPath());
			System.out.println("Output format:"+op.getOutFormat());
			if(op.getOutFormat().contains("sgf"))
				System.out.println("XSL file:"+op.getXslPath());

			
			Converter convertor = new Converter(op);
			convertor.convert();
		}
	}
}
